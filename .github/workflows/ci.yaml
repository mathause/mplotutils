name: CI
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  test:
    name: py${{ matrix.python-version }} ${{ matrix.os }} ${{ matrix.env }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10", "3.12"]
        env: [""]
        include:
          - env: "min-all-deps"
            python-version: "3.10"
            os: "ubuntu-latest"
          - env: ""
            python-version: "3.12"
            os: "macos-latest"
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set environment variables
      run: |

        if [[ "${{ matrix.env }}" == "" ]]; then
          echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV
        else
          echo "CONDA_ENV_FILE=ci/requirements/${{ matrix.env }}.yml" >> $GITHUB_ENV
        fi

    - name: Create conda environment
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: mplotutils-tests
        cache-downloads: true
        cache-downloads-key: "${{runner.os}}-${{runner.arch}}-py${{matrix.python-version}}-${{ env.CONDA_ENV_FILE }}"
        micromamba-version: 'latest'
        environment-file: ${{ env.CONDA_ENV_FILE }}
        create-args: >-
          python=${{ matrix.python-version }}

    - name: Install mplotutils
      run: |
        python -m pip install --no-deps -e .

    - name: Run tests
      run: python -m pytest
       -ra -v
       --cov=mplotutils
       --cov-report=xml

    - name: Upload code coverage to Codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

  doctest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest -e .
    - name: Test with pytest
      run: |
        python -m pytest --doctest-modules mplotutils --ignore mplotutils/tests
